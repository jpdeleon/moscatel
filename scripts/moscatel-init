#!/usr/bin/env python

from moscatel.utils import *
import os
import sys
import getpass
username = getpass.getuser()
import argparse

parser = argparse.ArgumentParser(description="""
                1. Creates a default configuration file (if does not exist)
                2. Sorts raw data filename into bands/colors""",
                usage='use "%(prog)s --help" for more information',
                formatter_class=argparse.RawTextHelpFormatter)
parser.add_argument('--skip_every', help='skip every nth frame per band e.g. 5',
    type=int, default=None)
args = parser.parse_args()

skip_every = args.skip_every

config_dir = os.path.join('/home',username,'moscatel')
config_file= os.path.join(config_dir,'config.txt')

if not os.path.exists(config_dir):
    os.makedirs(config_dir)
if not os.path.isfile(config_file):
    create_config(config_dir)

#initialize
print('-----------------------')
print('Checking raw data frames')
print('-----------------------\n')
config=check_config()
data_dir = config[0]
output_dir = config[1]
filters_in_config = config[2].split(',')

filters_in_hdr = init_moscatel(data_dir, filters_in_config, output_dir, skip_every)
if filters_in_config.sort() != filters_in_hdr:
    print('The filters specified in config file:\n{0}\n \
            does not match the filters in header of the raw data: \
            \n{1}'.format(filters_in_config, filters_in_hdr))
    sys.exit()

'''if check_list == True or check_list == None:
    #run this first time; make False when running when running again for
    other two bands

    #check if file exists
    if os.path.isfile(output_dir+'filter_paths.txt'):
        print('File header already read and saved. Try --check_list False')

    bands = init_moscatel(raw_img_dir, skip_every)
    np.savetxt(output_dir+'/band1_paths.txt',bands[0],fmt='%s')
    np.savetxt(output_dir+'/band2_paths.txt',bands[1],fmt='%s')
    np.savetxt(output_dir+'/band3_paths.txt',bands[2],fmt='%s')

else: #check_list == False
    if os.path.isfile(output_dir+'/band1_paths.txt'):
        band1=np.loadtxt(output_dir+'/band1_paths.txt')
        band2=np.loadtxt(output_dir+'/band2_paths.txt')
        band3=np.loadtxt(output_dir+'/band3_paths.txt')
        bands=[band1,band2,band3]'''

print('-----------------------')
print('          DONE')
print('-----------------------\n')
